#include <ncurses.h>
#include <vector>
#include <string>

void displayMenu(int highlight, const std::vector<std::string>& options) {
    int x, y;
    x = 2; // Starting position for text
    y = 6; // Adjusted y position to leave space for the header

    for (int i = 0; i < options.size(); i++) {
        if (i == highlight) {
            attron(A_REVERSE); // Highlight option (reverse colors)
        }
        mvprintw(y, x, options[i].c_str());
        attroff(A_REVERSE); // Turn off highlight
        y++;
    }
    refresh();
}

void displayHeader(int width) {
    int x = (width - 22) / 2; // Center the header ("Welcome to the Menu!") horizontally
    int y = 1; // Position for header at the top

    attron(COLOR_PAIR(1)); // Set color pair for white background and black text
    mvprintw(y, x, "Welcome to the Menu!"); // Display the header at the center
    attroff(COLOR_PAIR(1)); // Reset color pair

    refresh();
}

void displayBorder(int height, int width) {
    // Draw a border around the menu area
    box(stdscr, 0, 0); // Top and left border
    mvhline(1, 0, '-', width); // Top border line (above the menu)
    mvhline(height - 1, 0, '-', width); // Bottom border line (below the menu)
    mvvline(1, 0, '|', height - 2); // Left border line (beside the menu)
    mvvline(1, width - 1, '|', height - 2); // Right border line (beside the menu)
}

int main() {
    initscr();                // Start ncurses mode
    clear();                  // Clear screen
    noecho();                 // Disable echoing of typed characters
    cbreak();                 // Disable line buffering
    keypad(stdscr, TRUE);     // Enable special keys (e.g., arrows)
    curs_set(0);              // Hide cursor

    // Initialize color pairs
    start_color();
    init_pair(1, COLOR_BLACK, COLOR_WHITE); // White background, black foreground

    // Menu options
    std::vector<std::string> options = {"Start", "Config", "Exit"};
    int highlight = 0; // Index of the highlighted option
    int choice = -1;   // User's choice
    int ch;

    int height = 10; // Menu height
    int width = 40;  // Menu width

    // Main loop
    while (true) {
        clear();
        displayBorder(height, width); // Draw the border
        displayHeader(width); // Display the centered header
        displayMenu(highlight, options); // Display the menu
        ch = getch(); // Get user input

        switch (ch) {
            case KEY_UP:
                highlight = (highlight - 1 + options.size()) % options.size();
                break;
            case KEY_DOWN:
                highlight = (highlight + 1) % options.size();
                break;
            case 10: // Enter key
                choice = highlight;
                break;
        }

        if (choice != -1) {
            break;
        }
    }

    // Perform action based on choice
    endwin(); // End ncurses mode
    if (choice == 0) {
        printf("Starting...\n");
    } else if (choice == 1) {
        printf("Opening Config...\n");
    } else if (choice == 2) {
        printf("Exiting...\n");
    }

    return 0;
}